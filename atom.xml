<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chen Lianhan</title>
  
  <subtitle>A student in SEIT of SYSU</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-06T07:12:52.893Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Chen Lianhan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基于树莓派的实时监控系统设计</title>
    <link href="http://yoursite.com/2020/03/06/%E5%9F%BA%E4%BA%8E%E6%A0%91%E8%8E%93%E6%B4%BE%E7%9A%84%E5%AE%9E%E6%97%B6%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    <id>http://yoursite.com/2020/03/06/基于树莓派的实时监控系统设计/</id>
    <published>2020-03-06T07:03:07.000Z</published>
    <updated>2020-03-06T07:12:52.893Z</updated>
    
    <content type="html"><![CDATA[<p>内容如下：</p><a id="more"></a><p><img src="0002.jpg" alt><br><img src="0003.jpg" alt><br><img src="0004.jpg" alt><br><img src="0005.jpg" alt><br><img src="0006.jpg" alt><br><img src="0007.jpg" alt><br><img src="0008.jpg" alt><br><img src="0009.jpg" alt><br><img src="0010.jpg" alt><br><img src="0011.jpg" alt><br><img src="0012.jpg" alt><br><img src="0013.jpg" alt><br><img src="0014.jpg" alt><br><img src="0015.jpg" alt><br><img src="0016.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;内容如下：&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="reports" scheme="http://yoursite.com/tags/reports/"/>
    
  </entry>
  
  <entry>
    <title>基于Mathematica的信号系统与处理</title>
    <link href="http://yoursite.com/2020/03/06/%E5%9F%BA%E4%BA%8EMathematica%E7%9A%84%E4%BF%A1%E5%8F%B7%E7%B3%BB%E7%BB%9F%E4%B8%8E%E5%A4%84%E7%90%86/"/>
    <id>http://yoursite.com/2020/03/06/基于Mathematica的信号系统与处理/</id>
    <published>2020-03-06T06:58:03.000Z</published>
    <updated>2020-03-06T07:12:58.282Z</updated>
    
    <content type="html"><![CDATA[<p>内容如下：</p><a id="more"></a><p><img src="0001.jpg" alt><br><img src="0002.jpg" alt><br><img src="0003.jpg" alt><br><img src="0004.jpg" alt><br><img src="0005.jpg" alt><br><img src="0006.jpg" alt><br><img src="0007.jpg" alt><br><img src="0008.jpg" alt><br><img src="0009.jpg" alt><br><img src="0010.jpg" alt><br><img src="0011.jpg" alt><br><img src="0012.jpg" alt><br><img src="0013.jpg" alt><br><img src="0014.jpg" alt><br><img src="0015.jpg" alt><br><img src="0016.jpg" alt><br><img src="0017.jpg" alt><br><img src="0018.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;内容如下：&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="reports" scheme="http://yoursite.com/tags/reports/"/>
    
  </entry>
  
  <entry>
    <title>LATEX符号大全</title>
    <link href="http://yoursite.com/2020/03/06/LATEX%E7%AC%A6%E5%8F%B7%E5%A4%A7%E5%85%A8/"/>
    <id>http://yoursite.com/2020/03/06/LATEX符号大全/</id>
    <published>2020-03-06T06:54:04.000Z</published>
    <updated>2020-03-06T07:13:04.120Z</updated>
    
    <content type="html"><![CDATA[<p>内容如下：</p><a id="more"></a><p><img src="0001.jpg" alt><br><img src="0002.jpg" alt><br><img src="0003.jpg" alt><br><img src="0004.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;内容如下：&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="doc" scheme="http://yoursite.com/tags/doc/"/>
    
  </entry>
  
  <entry>
    <title>模拟电路期末实验报告</title>
    <link href="http://yoursite.com/2020/03/06/%E6%A8%A1%E6%8B%9F%E7%94%B5%E8%B7%AF%E6%9C%9F%E6%9C%AB%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    <id>http://yoursite.com/2020/03/06/模拟电路期末实验报告/</id>
    <published>2020-03-06T06:49:25.000Z</published>
    <updated>2020-03-06T06:51:23.954Z</updated>
    
    <content type="html"><![CDATA[<p>内容如下：</p><a id="more"></a><p><img src="0001.jpg" alt><br><img src="0002.jpg" alt><br><img src="0003.jpg" alt><br><img src="0004.jpg" alt><br><img src="0005.jpg" alt><br><img src="0006.jpg" alt><br><img src="0007.jpg" alt><br><img src="0008.jpg" alt><br><img src="0009.jpg" alt><br><img src="0010.jpg" alt><br><img src="0011.jpg" alt><br><img src="0012.jpg" alt><br><img src="0013.jpg" alt><br><img src="0014.jpg" alt><br><img src="0015.jpg" alt><br><img src="0016.jpg" alt><br><img src="0017.jpg" alt><br><img src="0018.jpg" alt><br><img src="0019.jpg" alt><br><img src="0020.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;内容如下：&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="reports" scheme="http://yoursite.com/tags/reports/"/>
    
  </entry>
  
  <entry>
    <title>Flutter学习日记3</title>
    <link href="http://yoursite.com/2020/02/27/flutter-learning-log3/"/>
    <id>http://yoursite.com/2020/02/27/flutter-learning-log3/</id>
    <published>2020-02-26T16:00:00.000Z</published>
    <updated>2020-03-06T05:14:39.293Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Flutter多媒体资源详解"><a href="#Flutter多媒体资源详解" class="headerlink" title="Flutter多媒体资源详解"></a>Flutter多媒体资源详解</h1><h2 id="本章目标"><a href="#本章目标" class="headerlink" title="本章目标"></a>本章目标</h2><ol><li>了解pubspec.yaml文件，数值如何在pubspec.yaml中添加相关配置项</li><li>掌握图片资源加载和使用</li><li>掌握自定义字体资源的加载和使用</li><li>掌握其他资源文件的加载和使用，如：文本、音频、视频文件（难点）</li><li>熟练使用如何通过资源达到UI适配（重点）</li><li>Flutter多媒体资源使用遇到的问题及解决方案<a id="more"></a><h2 id="pubspec-yaml文件详解"><a href="#pubspec-yaml文件详解" class="headerlink" title="pubspec.yaml文件详解"></a>pubspec.yaml文件详解</h2>配置文件：格式严格，必须严格注意书写格式，尤其是空格和对齐位置。注意大小写</li></ol><p>注意字符串文件，必须填写正确，填写错误会报错。</p><p>可以引用pub.dev的开源包，也可以使用git资源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dependeies:</span><br><span class="line">  git:</span><br><span class="line">库名称:</span><br><span class="line">  git:git://github.com/用户名或者组织名称/库名称.git  #使用https</span><br><span class="line">  git:git@github.com:用户名或者组织名称/库名称.git   #使用ssh</span><br></pre></td></tr></table></figure><p>下载或更新资源： <code>pub get ,  Flutter packages get , flutter pub get</code></p><p>更新包：<code>flutter packages upgrade</code></p><h2 id="Flutter处理图片资源详解"><a href="#Flutter处理图片资源详解" class="headerlink" title="Flutter处理图片资源详解"></a>Flutter处理图片资源详解</h2><p>例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">flutter:</span><br><span class="line">  assets:</span><br><span class="line">- images/img_home.png</span><br><span class="line">- images/img_tab.png</span><br></pre></td></tr></table></figure><h2 id="Flutter处理字体资源详解"><a href="#Flutter处理字体资源详解" class="headerlink" title="Flutter处理字体资源详解"></a>Flutter处理字体资源详解</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">flutter:</span><br><span class="line">  fonts:</span><br><span class="line">   - family:Schyler</span><br><span class="line"> fonts:</span><br><span class="line"> - asset:fonts/Schyler-Regular.ttf</span><br><span class="line"> - asset:fonts/Schyler-Italic.ttf</span><br><span class="line"> style:italic</span><br><span class="line"> weight:700</span><br></pre></td></tr></table></figure><h2 id="Flutter处理文本资源详解"><a href="#Flutter处理文本资源详解" class="headerlink" title="Flutter处理文本资源详解"></a>Flutter处理文本资源详解</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">flutter:</span><br><span class="line">  assets:</span><br><span class="line">   - files/datas.xml</span><br><span class="line">   - files/datas.json</span><br><span class="line">   - files/data.txt</span><br></pre></td></tr></table></figure><h2 id="Flutter处理音视频资源详解"><a href="#Flutter处理音视频资源详解" class="headerlink" title="Flutter处理音视频资源详解"></a>Flutter处理音视频资源详解</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">flutter:</span><br><span class="line">  assets:</span><br><span class="line">   - media/intros.mp3</span><br><span class="line">   - media/intros.mp4</span><br><span class="line">   - assets/intros2.mp3</span><br><span class="line">   - assets/intros2.mp4</span><br><span class="line">   - assets/media/intros3.mp3</span><br><span class="line">   - assets/media/intros3.mp4</span><br></pre></td></tr></table></figure><p>assets 目录下文件加载方式还有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./intros.mp3</span><br><span class="line">/intros.mp3</span><br><span class="line">intros.mp3</span><br></pre></td></tr></table></figure><p>加载音视频资源需要引用外部的包：</p><ol><li><p>加载音频：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dependencies:</span><br><span class="line"> audioplayers: ^0.13.2</span><br></pre></td></tr></table></figure></li><li><p>加载视频：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dependencies:</span><br><span class="line"> video_player: ^0.10.2+5</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Flutter多媒体资源详解&quot;&gt;&lt;a href=&quot;#Flutter多媒体资源详解&quot; class=&quot;headerlink&quot; title=&quot;Flutter多媒体资源详解&quot;&gt;&lt;/a&gt;Flutter多媒体资源详解&lt;/h1&gt;&lt;h2 id=&quot;本章目标&quot;&gt;&lt;a href=&quot;#本章目标&quot; class=&quot;headerlink&quot; title=&quot;本章目标&quot;&gt;&lt;/a&gt;本章目标&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;了解pubspec.yaml文件，数值如何在pubspec.yaml中添加相关配置项&lt;/li&gt;
&lt;li&gt;掌握图片资源加载和使用&lt;/li&gt;
&lt;li&gt;掌握自定义字体资源的加载和使用&lt;/li&gt;
&lt;li&gt;掌握其他资源文件的加载和使用，如：文本、音频、视频文件（难点）&lt;/li&gt;
&lt;li&gt;熟练使用如何通过资源达到UI适配（重点）&lt;/li&gt;
&lt;li&gt;Flutter多媒体资源使用遇到的问题及解决方案
    
    </summary>
    
    
      <category term="Flutter" scheme="http://yoursite.com/categories/Flutter/"/>
    
    
      <category term="Flutter" scheme="http://yoursite.com/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter学习日记2</title>
    <link href="http://yoursite.com/2020/02/06/flutter-learning-log2/"/>
    <id>http://yoursite.com/2020/02/06/flutter-learning-log2/</id>
    <published>2020-02-05T16:00:00.000Z</published>
    <updated>2020-03-06T04:55:45.903Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Flutter-常用组件介绍"><a href="#Flutter-常用组件介绍" class="headerlink" title="Flutter 常用组件介绍"></a>Flutter 常用组件介绍</h1><h2 id="了解Flutter组件是什么"><a href="#了解Flutter组件是什么" class="headerlink" title="了解Flutter组件是什么"></a>了解Flutter组件是什么</h2><h3 id="Flutter组件分类"><a href="#Flutter组件分类" class="headerlink" title="Flutter组件分类"></a>Flutter组件分类</h3><h4 id="文字类型"><a href="#文字类型" class="headerlink" title="文字类型"></a>文字类型</h4><p>用于描述文字，比如<code>Text</code>，字体的颜色大小，下划线，风格等等</p><h4 id="容器类型"><a href="#容器类型" class="headerlink" title="容器类型"></a>容器类型</h4><a id="more"></a><h4 id="辅助提示类型"><a href="#辅助提示类型" class="headerlink" title="辅助提示类型"></a>辅助提示类型</h4><h4 id="列表类型"><a href="#列表类型" class="headerlink" title="列表类型"></a>列表类型</h4><h4 id="系统主题风格类型"><a href="#系统主题风格类型" class="headerlink" title="系统主题风格类型"></a>系统主题风格类型</h4><h4 id="交互类型"><a href="#交互类型" class="headerlink" title="交互类型"></a>交互类型</h4><h2 id="了解常用的Flutter组件有哪些（重点）"><a href="#了解常用的Flutter组件有哪些（重点）" class="headerlink" title="了解常用的Flutter组件有哪些（重点）"></a>了解常用的Flutter组件有哪些（重点）</h2><h2 id="掌握常用Flutter组件的使用"><a href="#掌握常用Flutter组件的使用" class="headerlink" title="掌握常用Flutter组件的使用"></a>掌握常用Flutter组件的使用</h2><h2 id="使用Flutter组件构建一个完整的页面布局（难点）"><a href="#使用Flutter组件构建一个完整的页面布局（难点）" class="headerlink" title="使用Flutter组件构建一个完整的页面布局（难点）"></a>使用Flutter组件构建一个完整的页面布局（难点）</h2><h3 id="构建布局的技巧"><a href="#构建布局的技巧" class="headerlink" title="构建布局的技巧"></a>构建布局的技巧</h3><h3 id="使用StatelessWidget和StatefulWidget"><a href="#使用StatelessWidget和StatefulWidget" class="headerlink" title="使用StatelessWidget和StatefulWidget"></a>使用StatelessWidget和StatefulWidget</h3><h3 id="根据UI图，构建静态以及可交互的布局"><a href="#根据UI图，构建静态以及可交互的布局" class="headerlink" title="根据UI图，构建静态以及可交互的布局"></a>根据UI图，构建静态以及可交互的布局</h3><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="本章介绍了Flutter常用组件有哪些"><a href="#本章介绍了Flutter常用组件有哪些" class="headerlink" title="本章介绍了Flutter常用组件有哪些"></a>本章介绍了Flutter常用组件有哪些</h3><h3 id="详细介绍了Flutter常用组件的使用"><a href="#详细介绍了Flutter常用组件的使用" class="headerlink" title="详细介绍了Flutter常用组件的使用"></a>详细介绍了Flutter常用组件的使用</h3><h3 id="如何根据UI图构建一个完整的可交互的布局"><a href="#如何根据UI图构建一个完整的可交互的布局" class="headerlink" title="如何根据UI图构建一个完整的可交互的布局"></a>如何根据UI图构建一个完整的可交互的布局</h3><h1 id="页面交互路由与导航详解——路由常用API详解"><a href="#页面交互路由与导航详解——路由常用API详解" class="headerlink" title="页面交互路由与导航详解——路由常用API详解"></a>页面交互路由与导航详解——路由常用API详解</h1><h2 id="掌握路由跳转的几种方式（重点）"><a href="#掌握路由跳转的几种方式（重点）" class="headerlink" title="掌握路由跳转的几种方式（重点）"></a>掌握路由跳转的几种方式（重点）</h2><h3 id="单一页面跳转"><a href="#单一页面跳转" class="headerlink" title="单一页面跳转"></a>单一页面跳转</h3><p>使用 Navigator.of(context).push()或者Navigator.of(context).pop()进行单一页面的跳转</p><h3 id="多个页面路由管理"><a href="#多个页面路由管理" class="headerlink" title="多个页面路由管理"></a>多个页面路由管理</h3><p>使用 Map&lt;String, WidgetBuilder&gt; xxx = {‘pageone’:(builder){return 页面函数();},…};对所有相关的路由页面进行一个统一定义和管理。</p><p>再在MaterialApp里面定义好home（主页面）和initialRoute和routes，其中routes就是上面定义的map路由信息管理。</p><h2 id="路由常用函数API详解"><a href="#路由常用函数API详解" class="headerlink" title="路由常用函数API详解"></a>路由常用函数API详解</h2><h3 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h3><p>push：将设置的router信息推送到Navigator上，实现页面跳转</p><p>of：主要是获取Navigator最近实例的状态</p><p>pop：导航到新页面，或者返回到上个页面</p><p>canPop：判断是否可以导航到新页面</p><p>pushNamed：将命名路由推送到Navigator</p><p>popAndPushNamed：指定一个路由路径，并导肮到新页面</p><p>pushAndRemoveUntil：将给定路由推送到Navigator，删除之前的路由，直到该函数的参数predicate返回true为止。</p><p>popUntil：反复执行pop直到该函数的参数predicate返回true为止</p><h3 id="需要了解"><a href="#需要了解" class="headerlink" title="需要了解"></a>需要了解</h3><p>maybePop：可能会导航到新页面</p><p>pushNamedAndRemoveUntil：将命名路由推送到Navigator，删除先前的路由，直到该函数的参数predicate返回true为止</p><p>pushReplacement：路由替换</p><p>pushReplacementNamed：这个也是替换路由操作。推送一个命名路由到Navigator，新路由完成动画之后处理上一个路由</p><p>removeRoute：从Navigator中删除路由，同时执行Route.dispose操作</p><p>removeRouteBelow：从Navigator中删除路由，同时执行Route.dispose操作，要替换的路由是由传入参数anchorRouter里面的路由</p><p>replace：将Navigator中的路由替换成一个新路由</p><p>replaceRouteBelow：将Navigator中的路由替换成一个新路由，要替换的路由时传入参数anchorRouter里面的路由</p><h2 id="掌握路由的发送和接收数据的使用（难点）"><a href="#掌握路由的发送和接收数据的使用（难点）" class="headerlink" title="掌握路由的发送和接收数据的使用（难点）"></a>掌握路由的发送和接收数据的使用（难点）</h2><h3 id="发送数据"><a href="#发送数据" class="headerlink" title="发送数据"></a>发送数据</h3><h3 id="接收数据"><a href="#接收数据" class="headerlink" title="接收数据"></a>接收数据</h3><h3 id="发送并接收其他页面返回的数据"><a href="#发送并接收其他页面返回的数据" class="headerlink" title="发送并接收其他页面返回的数据"></a>发送并接收其他页面返回的数据</h3><h2 id="熟悉路由使用中遇到的问题及解决"><a href="#熟悉路由使用中遇到的问题及解决" class="headerlink" title="熟悉路由使用中遇到的问题及解决"></a>熟悉路由使用中遇到的问题及解决</h2><h3 id="主题风格的一致性"><a href="#主题风格的一致性" class="headerlink" title="主题风格的一致性"></a>主题风格的一致性</h3><h3 id="主页面和非主页面跳转方式选择不太一样"><a href="#主页面和非主页面跳转方式选择不太一样" class="headerlink" title="主页面和非主页面跳转方式选择不太一样"></a>主页面和非主页面跳转方式选择不太一样</h3><h3 id="Scaffold组件的body属性值为具体组件名称，接收不到路由返回的数据"><a href="#Scaffold组件的body属性值为具体组件名称，接收不到路由返回的数据" class="headerlink" title="Scaffold组件的body属性值为具体组件名称，接收不到路由返回的数据"></a>Scaffold组件的body属性值为具体组件名称，接收不到路由返回的数据</h3><h3 id="目标页面可以写main函数，也可以不写，首页写上main函数，其他页面不写，便于查找和维护"><a href="#目标页面可以写main函数，也可以不写，首页写上main函数，其他页面不写，便于查找和维护" class="headerlink" title="目标页面可以写main函数，也可以不写，首页写上main函数，其他页面不写，便于查找和维护"></a>目标页面可以写main函数，也可以不写，首页写上main函数，其他页面不写，便于查找和维护</h3><h3 id="路由路径的正确性，传参的一致性的问题"><a href="#路由路径的正确性，传参的一致性的问题" class="headerlink" title="路由路径的正确性，传参的一致性的问题"></a>路由路径的正确性，传参的一致性的问题</h3><h2 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h2><h3 id="主要介绍了路由跳转的几种方式"><a href="#主要介绍了路由跳转的几种方式" class="headerlink" title="主要介绍了路由跳转的几种方式"></a>主要介绍了路由跳转的几种方式</h3><h3 id="详细讲解了路由的发送和接受数据的使用"><a href="#详细讲解了路由的发送和接受数据的使用" class="headerlink" title="详细讲解了路由的发送和接受数据的使用"></a>详细讲解了路由的发送和接受数据的使用</h3><h3 id="熟悉路由使用中遇到的问题及解决-1"><a href="#熟悉路由使用中遇到的问题及解决-1" class="headerlink" title="熟悉路由使用中遇到的问题及解决"></a>熟悉路由使用中遇到的问题及解决</h3><p>#Flutter手势操作和事件处理（GestureDetector生命周期）<br>包括点击，长按，滑动，删除等等操作，须知如何用代码实现。</p><h2 id="GestureDetector生命周期（常用）"><a href="#GestureDetector生命周期（常用）" class="headerlink" title="GestureDetector生命周期（常用）"></a>GestureDetector生命周期（常用）</h2><table><thead><tr><th align="center">事件类型</th><th align="center">事件函数名称</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">Tap</td><td align="center">onTapDown</td><td align="center">按下</td></tr><tr><td align="center"></td><td align="center">onTapUp</td><td align="center">抬起</td></tr><tr><td align="center"></td><td align="center">onTap</td><td align="center">点击</td></tr><tr><td align="center">双击</td><td align="center">onDoubleTap</td><td align="center">双击</td></tr><tr><td align="center">长按</td><td align="center">onLongPressStart</td><td align="center">长按开始</td></tr><tr><td align="center"></td><td align="center">onLongPress</td><td align="center">长按</td></tr><tr><td align="center"></td><td align="center">onLongPressEnd</td><td align="center">长按结束</td></tr><tr><td align="center"></td><td align="center">onLongPressUp</td><td align="center">抬起</td></tr><tr><td align="center">Scale</td><td align="center">onScaleStart</td><td align="center">Scale事件开始</td></tr><tr><td align="center"></td><td align="center">onScaleUpdate</td><td align="center">Scale事件进行中</td></tr><tr><td align="center"></td><td align="center">onScaleEnd</td><td align="center">Scale事件结束</td></tr><tr><td align="center">垂直滑动</td><td align="center">onVerticalDragDown</td><td align="center">垂直滑动按下</td></tr><tr><td align="center"></td><td align="center">onVerticalDragStart</td><td align="center">垂直滑动开始</td></tr><tr><td align="center"></td><td align="center">onVerticalDragUpdate</td><td align="center">垂直滑动进行中</td></tr><tr><td align="center"></td><td align="center">onVerticalDragEnd</td><td align="center">垂直滑动结束</td></tr><tr><td align="center">水平滑动</td><td align="center">onHorizontalDragDown</td><td align="center">水平滑动按下</td></tr><tr><td align="center"></td><td align="center">onHorizontalDragStart</td><td align="center">水平滑动开始</td></tr><tr><td align="center"></td><td align="center">onHorizontalDragUpdate</td><td align="center">水平滑动进行中</td></tr><tr><td align="center"></td><td align="center">onHorizontalDragEnd</td><td align="center">水平滑动结束</td></tr><tr><td align="center">Pan</td><td align="center">onPanDown</td><td align="center">Pan事件按下</td></tr><tr><td align="center"></td><td align="center">onPanStart</td><td align="center">Pan事件开始</td></tr><tr><td align="center"></td><td align="center">onPanEnd</td><td align="center">Pan事件结束</td></tr></tbody></table><h2 id="GestureDetector多事件混合使用详解"><a href="#GestureDetector多事件混合使用详解" class="headerlink" title="GestureDetector多事件混合使用详解"></a>GestureDetector多事件混合使用详解</h2><h3 id="长按和Pan事件"><a href="#长按和Pan事件" class="headerlink" title="长按和Pan事件"></a>长按和Pan事件</h3><p>点击屏幕  -》  onPanDown  -》  onPanCancel  -》  onLongPressStart  -》  onLongPress  -》  onLongPressEnd  -》  onLongPressUp</p><h3 id="Tap和Pan事件"><a href="#Tap和Pan事件" class="headerlink" title="Tap和Pan事件"></a>Tap和Pan事件</h3><p>点击屏幕  -》  onPanDown  -》  onPanCancel  -》  onTapDown  -》  onTapUp  -》  onTap</p><h3 id="垂直滑动和Pan事件"><a href="#垂直滑动和Pan事件" class="headerlink" title="垂直滑动和Pan事件"></a>垂直滑动和Pan事件</h3><p>点击屏幕  -》  onVerticalDragDown  -》  onPanDown  -》  onPanCancel  -》  onVerticalDragStart  -》  onVerticalDragUpdate  -》  onVerticalEnd</p><h3 id="水平滑动和Pan事件"><a href="#水平滑动和Pan事件" class="headerlink" title="水平滑动和Pan事件"></a>水平滑动和Pan事件</h3><p>点击屏幕  -》  onHorizontalDragDown  -》  onPanDown  -》  onPanCancel  -》  onHorizontalDragStart  -》  onHorizontalDragUpdate  -》onHorizontalDragEnd</p><h3 id="Scale和Tap事件"><a href="#Scale和Tap事件" class="headerlink" title="Scale和Tap事件"></a>Scale和Tap事件</h3><p>点击屏幕  -》  onTapDown  -》  onTapCancel  -》  onScaleStart  -》  onScaleUpdate  -》  onScaleEnd</p><h3 id="双击、Tap和Pan事件"><a href="#双击、Tap和Pan事件" class="headerlink" title="双击、Tap和Pan事件"></a>双击、Tap和Pan事件</h3><p>点击屏幕  -》  onPanDown  -》  onPanCancel  -》  onPanDown  -》  onPanCancel  -》  onDoubleTap</p><p>##常用带事件处理的组件使用详解</p><h3 id="FloatingActionButton"><a href="#FloatingActionButton" class="headerlink" title="FloatingActionButton"></a>FloatingActionButton</h3><h3 id="RaisedButton"><a href="#RaisedButton" class="headerlink" title="RaisedButton"></a>RaisedButton</h3><h3 id="IconButton"><a href="#IconButton" class="headerlink" title="IconButton"></a>IconButton</h3><h3 id="ToggleButtons"><a href="#ToggleButtons" class="headerlink" title="ToggleButtons"></a>ToggleButtons</h3><h2 id="使用Ink和InkWell组件实现事件操作"><a href="#使用Ink和InkWell组件实现事件操作" class="headerlink" title="使用Ink和InkWell组件实现事件操作"></a>使用Ink和InkWell组件实现事件操作</h2><h2 id="手势操作遇到的问题及解决"><a href="#手势操作遇到的问题及解决" class="headerlink" title="手势操作遇到的问题及解决"></a>手势操作遇到的问题及解决</h2><h3 id="Pan和Scale不能同时使用"><a href="#Pan和Scale不能同时使用" class="headerlink" title="Pan和Scale不能同时使用"></a>Pan和Scale不能同时使用</h3><h3 id="垂直和水平事件不能同时使用"><a href="#垂直和水平事件不能同时使用" class="headerlink" title="垂直和水平事件不能同时使用"></a>垂直和水平事件不能同时使用</h3><h3 id="双击事件要获取坐标，需要和Pan事件同时使用"><a href="#双击事件要获取坐标，需要和Pan事件同时使用" class="headerlink" title="双击事件要获取坐标，需要和Pan事件同时使用"></a>双击事件要获取坐标，需要和Pan事件同时使用</h3><h2 id="手势处理综合使用实例操作实战"><a href="#手势处理综合使用实例操作实战" class="headerlink" title="手势处理综合使用实例操作实战"></a>手势处理综合使用实例操作实战</h2><h3 id="GestureDetector"><a href="#GestureDetector" class="headerlink" title="GestureDetector"></a>GestureDetector</h3><h3 id="使用带有事件操作的组件"><a href="#使用带有事件操作的组件" class="headerlink" title="使用带有事件操作的组件"></a>使用带有事件操作的组件</h3><h3 id="使用Ink，InkWell或InkResponse组件"><a href="#使用Ink，InkWell或InkResponse组件" class="headerlink" title="使用Ink，InkWell或InkResponse组件"></a>使用Ink，InkWell或InkResponse组件</h3><h2 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h2><h3 id="主要介绍了手势处理的三种方式"><a href="#主要介绍了手势处理的三种方式" class="headerlink" title="主要介绍了手势处理的三种方式"></a>主要介绍了手势处理的三种方式</h3><h3 id="了解GestureDetector生命周期"><a href="#了解GestureDetector生命周期" class="headerlink" title="了解GestureDetector生命周期"></a>了解GestureDetector生命周期</h3><h3 id="通过一个案例讲解，熟悉GestureDetector使用"><a href="#通过一个案例讲解，熟悉GestureDetector使用" class="headerlink" title="通过一个案例讲解，熟悉GestureDetector使用"></a>通过一个案例讲解，熟悉GestureDetector使用</h3><h3 id="了解手势处理遇到的问题及解决"><a href="#了解手势处理遇到的问题及解决" class="headerlink" title="了解手势处理遇到的问题及解决"></a>了解手势处理遇到的问题及解决</h3><h3 id="熟悉常用带事件处理的组件"><a href="#熟悉常用带事件处理的组件" class="headerlink" title="熟悉常用带事件处理的组件"></a>熟悉常用带事件处理的组件</h3><h3 id="掌握Ink、InkWell和InkResponse组件进行事件操作"><a href="#掌握Ink、InkWell和InkResponse组件进行事件操作" class="headerlink" title="掌握Ink、InkWell和InkResponse组件进行事件操作"></a>掌握Ink、InkWell和InkResponse组件进行事件操作</h3><h1 id="Flutter动画处理"><a href="#Flutter动画处理" class="headerlink" title="Flutter动画处理"></a>Flutter动画处理</h1><h2 id="本章目标"><a href="#本章目标" class="headerlink" title="本章目标"></a>本章目标</h2><p>1.掌握Flutter动画的基本使用（重点）</p><p>2.Flare动画的使用（难点）</p><p>3.动画使用中遇到的问题及解决</p><h2 id="Flutter动画的类型"><a href="#Flutter动画的类型" class="headerlink" title="Flutter动画的类型"></a>Flutter动画的类型</h2><h3 id="Tween动画"><a href="#Tween动画" class="headerlink" title="Tween动画"></a>Tween动画</h3><p>有缩放，旋转，平移，透明度，淡入淡出等效果</p><h3 id="AnimatedBuilder"><a href="#AnimatedBuilder" class="headerlink" title="AnimatedBuilder"></a>AnimatedBuilder</h3><p>构建Animated 的类，该类可以加入一些动画组件</p><h3 id="AnimatedContainer"><a href="#AnimatedContainer" class="headerlink" title="AnimatedContainer"></a>AnimatedContainer</h3><p>在Container基础上加入动画效果</p><h3 id="Hero动画"><a href="#Hero动画" class="headerlink" title="Hero动画"></a>Hero动画</h3><p>共享元素动画形式，在不同页面中享用共同元素的内容，页面切换时的无缝对接</p><h3 id="Flare动画"><a href="#Flare动画" class="headerlink" title="Flare动画"></a>Flare动画</h3><p>可以使用代码加载Flare文件</p><h2 id="Tween动画使用方式详解"><a href="#Tween动画使用方式详解" class="headerlink" title="Tween动画使用方式详解"></a>Tween动画使用方式详解</h2><p>动画的要素组成：</p><ol><li>AnimationController:动画的时长、正序逆序    控制器</li><li>Animation：核心实现  内容实现</li><li>Tween：Animation的子类</li></ol><h2 id="Tween和AnimationController的区别"><a href="#Tween和AnimationController的区别" class="headerlink" title="Tween和AnimationController的区别"></a>Tween和AnimationController的区别</h2><h4 id="相同：他们都是Animation的子类型，都具有最小值、最大值的属性。"><a href="#相同：他们都是Animation的子类型，都具有最小值、最大值的属性。" class="headerlink" title="相同：他们都是Animation的子类型，都具有最小值、最大值的属性。"></a>相同：他们都是Animation的子类型，都具有最小值、最大值的属性。</h4><h4 id="不同："><a href="#不同：" class="headerlink" title="不同："></a>不同：</h4><h5 id="1-AnimationController只是一个控制器，包括：动画时长、初始值、结束值等属性。"><a href="#1-AnimationController只是一个控制器，包括：动画时长、初始值、结束值等属性。" class="headerlink" title="1.AnimationController只是一个控制器，包括：动画时长、初始值、结束值等属性。"></a>1.AnimationController只是一个控制器，包括：动画时长、初始值、结束值等属性。</h5><h5 id="2-Tween用于转化动画输出的对象，可以通过调用animate函数，传入各种丰富的动画类型，比如CurvedAnimation动画。"><a href="#2-Tween用于转化动画输出的对象，可以通过调用animate函数，传入各种丰富的动画类型，比如CurvedAnimation动画。" class="headerlink" title="2.Tween用于转化动画输出的对象，可以通过调用animate函数，传入各种丰富的动画类型，比如CurvedAnimation动画。"></a>2.Tween用于转化动画输出的对象，可以通过调用animate函数，传入各种丰富的动画类型，比如CurvedAnimation动画。</h5><h5 id="3-AnimationController可以单独使用，但是Tween离不开AnimationController。"><a href="#3-AnimationController可以单独使用，但是Tween离不开AnimationController。" class="headerlink" title="3.AnimationController可以单独使用，但是Tween离不开AnimationController。"></a>3.AnimationController可以单独使用，但是Tween离不开AnimationController。</h5><h2 id="AnimatedBuilder处理动画详解"><a href="#AnimatedBuilder处理动画详解" class="headerlink" title="AnimatedBuilder处理动画详解"></a>AnimatedBuilder处理动画详解</h2><p>关键属性：</p><ol><li>animation 传入一个Animation对象。</li><li>builder 这里用于构建动画形式。</li></ol><h2 id="AnimatedContainer处理动画详解"><a href="#AnimatedContainer处理动画详解" class="headerlink" title="AnimatedContainer处理动画详解"></a>AnimatedContainer处理动画详解</h2><p>Flutter对Container动画组件的一个封装<br>使用AnimatedContainer包裹住我们的组件，即可实现动画操作。</p><h2 id="Hero动画使用方式详解"><a href="#Hero动画使用方式详解" class="headerlink" title="Hero动画使用方式详解"></a>Hero动画使用方式详解</h2><p>Hero动画基本使用：</p><h3 id="定义："><a href="#定义：" class="headerlink" title="定义："></a>定义：</h3><p>当使用Navigator或者使用PageRoute导航到一个新页面，整个屏幕的内容都会被替换。如果这两个路由上都有一个<br>公共的UI展示，那么在路由跳转时，Hero动画就可以用得上。Hero组件小部件在过渡期间<br>会在Navigator上“飞行”，并且在飞行过程中默认情况下，他们不会在新旧路线的原始位置中<br>显示。由于具有共享的特性，Hero动画又被称作“共享元素动画”。</p><h2 id="Flutter路由动画处理使用详解"><a href="#Flutter路由动画处理使用详解" class="headerlink" title="Flutter路由动画处理使用详解"></a>Flutter路由动画处理使用详解</h2><p>关键属性：</p><ol><li>PageRouteBuilder：字定义路由器切换的一个管理类</li><li>pageBuilder：返回需要跳转的目标页面</li><li>transitionsBuilder：自定义路由切换动画</li><li>transitionDuration：动画时长。</li></ol><h2 id="Flare动画加载和使用"><a href="#Flare动画加载和使用" class="headerlink" title="Flare动画加载和使用"></a>Flare动画加载和使用</h2><h4 id="Flare动画介绍"><a href="#Flare动画介绍" class="headerlink" title="Flare动画介绍"></a>Flare动画介绍</h4><p>2D矢量动画程序</p><h4 id="Flare动画资源配置"><a href="#Flare动画资源配置" class="headerlink" title="Flare动画资源配置"></a>Flare动画资源配置</h4><ol><li>登陆<a href="http://www.2dimensions.com" target="_blank" rel="noopener">http://www.2dimensions.com</a>     下载想要的动画资源</li><li>添加flare_flutter库</li><li>在pubspec.yaml里面配置.flr文件（即flare动画资源）</li></ol><h4 id="加载Flare动画"><a href="#加载Flare动画" class="headerlink" title="加载Flare动画"></a>加载Flare动画</h4><p>使用FlareActor组件加载本地.flr文件</p><h2 id="Flutter动画遇到的问题及其解决方案"><a href="#Flutter动画遇到的问题及其解决方案" class="headerlink" title="Flutter动画遇到的问题及其解决方案"></a>Flutter动画遇到的问题及其解决方案</h2><ol><li>没有在pubspec.yaml配置资源，导致加载Flare动画失败。</li><li>动画资源在Web上失效，在设备运行无效。</li><li>动画耗费资源较多，不用时及时释放资源。</li><li>动画的初始化问题。</li></ol><h2 id="Flutter动画处理总结"><a href="#Flutter动画处理总结" class="headerlink" title="Flutter动画处理总结"></a>Flutter动画处理总结</h2><ol><li>主要介绍了Flutter动画的基本使用</li><li>详细介绍了Flare动画的配置加载和使用</li><li>了解动画使用中遇到的问题及其解决方案</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Flutter-常用组件介绍&quot;&gt;&lt;a href=&quot;#Flutter-常用组件介绍&quot; class=&quot;headerlink&quot; title=&quot;Flutter 常用组件介绍&quot;&gt;&lt;/a&gt;Flutter 常用组件介绍&lt;/h1&gt;&lt;h2 id=&quot;了解Flutter组件是什么&quot;&gt;&lt;a href=&quot;#了解Flutter组件是什么&quot; class=&quot;headerlink&quot; title=&quot;了解Flutter组件是什么&quot;&gt;&lt;/a&gt;了解Flutter组件是什么&lt;/h2&gt;&lt;h3 id=&quot;Flutter组件分类&quot;&gt;&lt;a href=&quot;#Flutter组件分类&quot; class=&quot;headerlink&quot; title=&quot;Flutter组件分类&quot;&gt;&lt;/a&gt;Flutter组件分类&lt;/h3&gt;&lt;h4 id=&quot;文字类型&quot;&gt;&lt;a href=&quot;#文字类型&quot; class=&quot;headerlink&quot; title=&quot;文字类型&quot;&gt;&lt;/a&gt;文字类型&lt;/h4&gt;&lt;p&gt;用于描述文字，比如&lt;code&gt;Text&lt;/code&gt;，字体的颜色大小，下划线，风格等等&lt;/p&gt;
&lt;h4 id=&quot;容器类型&quot;&gt;&lt;a href=&quot;#容器类型&quot; class=&quot;headerlink&quot; title=&quot;容器类型&quot;&gt;&lt;/a&gt;容器类型&lt;/h4&gt;
    
    </summary>
    
    
      <category term="Flutter" scheme="http://yoursite.com/categories/Flutter/"/>
    
    
      <category term="Flutter" scheme="http://yoursite.com/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter学习日记1</title>
    <link href="http://yoursite.com/2020/02/05/flutter-learning-log/"/>
    <id>http://yoursite.com/2020/02/05/flutter-learning-log/</id>
    <published>2020-02-04T16:00:00.000Z</published>
    <updated>2020-03-06T05:40:28.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章：跨平台框架介绍"><a href="#第一章：跨平台框架介绍" class="headerlink" title="第一章：跨平台框架介绍"></a>第一章：跨平台框架介绍</h1><h2 id="了解跨平台框架发展历史"><a href="#了解跨平台框架发展历史" class="headerlink" title="了解跨平台框架发展历史"></a>了解跨平台框架发展历史</h2><p>为什么会有跨平台框架的产生，在移动端刚开始出现时，安卓和IOS端的开发相互独立。从需求调研到上线测试，环节复杂，少则几个月多则一年。</p><p>随着移动端的逐渐发展，项目规模逐渐变大，所以为了尽快占有市场推出应用，减少开发成本和周期，因而产生了跨平台框架。</p><p>首先开始网页形式，入门简单，但不如原生流畅，性能不足且会受到浏览器限制。后来出现中间产品，既有原生组成也有WEB内容，好处在于原生开发人员和web开发人员需要密切配合。</p><a id="more"></a><p>最后便是，含有编译转换等系列功能的跨平台框架。其中便包括Flutter.</p><h2 id="Flutter介绍及其原理"><a href="#Flutter介绍及其原理" class="headerlink" title="Flutter介绍及其原理"></a>Flutter介绍及其原理</h2><p>Flutter是谷歌推出的跨平台项目，最早是Skia。使用Dart语言。可以运行在安卓和IOS上。</p><p>具有以下几个特点：</p><h3 id="Flutter是现代响应式框架"><a href="#Flutter是现代响应式框架" class="headerlink" title="Flutter是现代响应式框架"></a>Flutter是现代响应式框架</h3><p>我们在编写代码的同时，可以预览编译之后的效果，提高开发效率。</p><h3 id="快速的2D渲染引擎"><a href="#快速的2D渲染引擎" class="headerlink" title="快速的2D渲染引擎"></a>快速的2D渲染引擎</h3><p>独立的Skia渲染平台，通过GPU渲染，实现高质量的跨平台用户体验。高帧率60FPS.</p><h3 id="开发调试工具"><a href="#开发调试工具" class="headerlink" title="开发调试工具"></a>开发调试工具</h3><p>Flutter视图预览和Flutter预览调试，比较快捷方便。</p><h3 id="内置丰富的组件"><a href="#内置丰富的组件" class="headerlink" title="内置丰富的组件"></a>内置丰富的组件</h3><p>适用于安卓的material组件和适用于ios的cupertino组件。自由扩展和组合，不受手机限制。</p><h3 id="Flutter体系结构"><a href="#Flutter体系结构" class="headerlink" title="Flutter体系结构"></a>Flutter体系结构</h3><h4 id="Framework层"><a href="#Framework层" class="headerlink" title="Framework层"></a>Framework层</h4><h5 id="Material和Cupertino"><a href="#Material和Cupertino" class="headerlink" title="Material和Cupertino"></a>Material和Cupertino</h5><h5 id="Widgets"><a href="#Widgets" class="headerlink" title="Widgets"></a>Widgets</h5><h5 id="Rendering渲染层"><a href="#Rendering渲染层" class="headerlink" title="Rendering渲染层"></a>Rendering渲染层</h5><h5 id="Animation-Painting-Gestures"><a href="#Animation-Painting-Gestures" class="headerlink" title="Animation Painting Gestures"></a>Animation Painting Gestures</h5><h5 id="Foundation"><a href="#Foundation" class="headerlink" title="Foundation"></a>Foundation</h5><h4 id="Engine（C-）引擎层"><a href="#Engine（C-）引擎层" class="headerlink" title="Engine（C++）引擎层"></a>Engine（C++）引擎层</h4><h5 id="Skia（图形渲染引擎库）-Dart（VN虚拟机）-Text（文本渲染）"><a href="#Skia（图形渲染引擎库）-Dart（VN虚拟机）-Text（文本渲染）" class="headerlink" title="Skia（图形渲染引擎库） Dart（VN虚拟机） Text（文本渲染）"></a>Skia（图形渲染引擎库） Dart（VN虚拟机） Text（文本渲染）</h5><h2 id="面向对象及Dart语言介绍"><a href="#面向对象及Dart语言介绍" class="headerlink" title="面向对象及Dart语言介绍"></a>面向对象及Dart语言介绍</h2><h3 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h3><p>一种编程思想，主要是把任何事情都封装成对象，通过对象去操作。</p><h3 id="Dart语言"><a href="#Dart语言" class="headerlink" title="Dart语言"></a>Dart语言</h3><p>简洁，强类型（基础类型有明确要求，除了dynamic），面向对象的语言</p><p>支持即时编译（Just-In-time）和预编译（Ahead-of-time）：使用情况不同，包含断言调试工具与否以及包的大小</p><p>静态类型，可以在编译时捕获错误并在代码增长时管理代码</p><p>易于移植，Dart可以编译为ARM和X86代码，让移动端APP可以在iOS、Android和其他地方运行。</p><p>响应式编程，易于学习上手。</p><h2 id="Flutter和其他跨平台框架对比"><a href="#Flutter和其他跨平台框架对比" class="headerlink" title="Flutter和其他跨平台框架对比"></a>Flutter和其他跨平台框架对比</h2><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过本章介绍，基本了解Flutter是什么，原理是什么。</p><p>了解Dart语言。</p><h1 id="第二章：-环境搭建和遇到的问题解决"><a href="#第二章：-环境搭建和遇到的问题解决" class="headerlink" title="第二章： 环境搭建和遇到的问题解决"></a>第二章： 环境搭建和遇到的问题解决</h1><h2 id="环境搭建和问题解决"><a href="#环境搭建和问题解决" class="headerlink" title="环境搭建和问题解决"></a>环境搭建和问题解决</h2><h3 id="配置国内镜像"><a href="#配置国内镜像" class="headerlink" title="配置国内镜像"></a>配置国内镜像</h3><h3 id="配置Gradle工具和环境变量"><a href="#配置Gradle工具和环境变量" class="headerlink" title="配置Gradle工具和环境变量"></a>配置Gradle工具和环境变量</h3><h3 id="配置JDK和SDK环境，特别注意安装SDK时，需要同意android-licenses"><a href="#配置JDK和SDK环境，特别注意安装SDK时，需要同意android-licenses" class="headerlink" title="配置JDK和SDK环境，特别注意安装SDK时，需要同意android licenses"></a>配置JDK和SDK环境，特别注意安装SDK时，需要同意android licenses</h3><h3 id="Flutter打开很慢，需要配置加快打开速度"><a href="#Flutter打开很慢，需要配置加快打开速度" class="headerlink" title="Flutter打开很慢，需要配置加快打开速度"></a>Flutter打开很慢，需要配置加快打开速度</h3><p>解决：Android Studio安装目录下的bin目录，找到idea.properties文件，在文件最后追加以下代码disable.android.First.run = true,然后保存。</p><p>然后重启即可</p><h3 id="配置CPU支持，解决部分机型兼容性问题"><a href="#配置CPU支持，解决部分机型兼容性问题" class="headerlink" title="配置CPU支持，解决部分机型兼容性问题"></a>配置CPU支持，解决部分机型兼容性问题</h3><p>解决：根目录/android/app/build.gradle, 在android节点里添加以下内容：</p><p><code>splits{abi{include&#39;x86&#39;,&#39;armeabi-v7a&#39;,&#39;x86_64&#39;}}</code></p><h3 id="flutter-upgrade出现的红色错误提示"><a href="#flutter-upgrade出现的红色错误提示" class="headerlink" title="flutter upgrade出现的红色错误提示"></a>flutter upgrade出现的红色错误提示</h3><p>如：BitsTrAnsformer或CategoryInfo之类的关键字</p><h3 id="flutter-doctor（-v）出现的红色错误提示"><a href="#flutter-doctor（-v）出现的红色错误提示" class="headerlink" title="flutter doctor（-v）出现的红色错误提示"></a>flutter doctor（-v）出现的红色错误提示</h3><p>如：BitsTransformer或者CategoryInfo之类的关键字</p><h3 id="Some-Android-licenses-not-accepted-或-Android-licenses-status-unknown-的错误提示"><a href="#Some-Android-licenses-not-accepted-或-Android-licenses-status-unknown-的错误提示" class="headerlink" title="Some Android licenses not accepted. 或 Android licenses status unknown 的错误提示"></a>Some Android licenses not accepted. 或 Android licenses status unknown 的错误提示</h3><p>解决：命令行输入：</p><p><code>flutter doctor --android-licenses</code></p><p>根据提示输入y即可。</p><h2 id="常用命令行详解"><a href="#常用命令行详解" class="headerlink" title="常用命令行详解"></a>常用命令行详解</h2><p><code>--version 查看Flutter版本</code></p><p><code>-h 或--help 打印所有命令行的用法信息</code></p><p><code>doctor 展示了有关安装工具的信息</code></p><p><code>upgrade 升级你的Flutter项目</code></p><p><code>create 创建一个新的Flutter项目</code></p><p><code>run 在附加设备上运行你的Flutter应用程序</code></p><p><code>build Flutter构建命令</code></p><p><code>install 在附加设备上安装Flutter应用程序</code></p><p><code>devices 列出所有连接的设备</code></p><p><code>clean 删除构建/目录</code></p><p><code>analyze 分析项目的Dart代码</code></p><p><code>channel 列表或开关Flutter通道</code></p><p><code>packages 命令用于管理Flutter包</code></p><p><code>logs 显示用于运行Flutter应用程序的日志输出</code></p><h2 id="不同开发工具hello-world的体验"><a href="#不同开发工具hello-world的体验" class="headerlink" title="不同开发工具hello world的体验"></a>不同开发工具hello world的体验</h2><p>在命令行内输入</p><p><code>flutter create</code></p><p>使用IDE打开创建成功的目录</p><p><code>pubspec.yaml</code>   </p><p>是配置文件，插件和库的配置</p><p><code>flutter run</code></p><p>在指定的设备（手机或者是模拟器）上运行程序</p><h2 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h2><h3 id="掌握Flutter环境配置及遇到的问题解决"><a href="#掌握Flutter环境配置及遇到的问题解决" class="headerlink" title="掌握Flutter环境配置及遇到的问题解决"></a>掌握Flutter环境配置及遇到的问题解决</h3><h3 id="了解常用命令行，能够运用命令行解决一些问题"><a href="#了解常用命令行，能够运用命令行解决一些问题" class="headerlink" title="了解常用命令行，能够运用命令行解决一些问题"></a>了解常用命令行，能够运用命令行解决一些问题</h3><h3 id="能够使用不同工具运行Hello-World页面在设备上"><a href="#能够使用不同工具运行Hello-World页面在设备上" class="headerlink" title="能够使用不同工具运行Hello World页面在设备上"></a>能够使用不同工具运行Hello World页面在设备上</h3>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;第一章：跨平台框架介绍&quot;&gt;&lt;a href=&quot;#第一章：跨平台框架介绍&quot; class=&quot;headerlink&quot; title=&quot;第一章：跨平台框架介绍&quot;&gt;&lt;/a&gt;第一章：跨平台框架介绍&lt;/h1&gt;&lt;h2 id=&quot;了解跨平台框架发展历史&quot;&gt;&lt;a href=&quot;#了解跨平台框架发展历史&quot; class=&quot;headerlink&quot; title=&quot;了解跨平台框架发展历史&quot;&gt;&lt;/a&gt;了解跨平台框架发展历史&lt;/h2&gt;&lt;p&gt;为什么会有跨平台框架的产生，在移动端刚开始出现时，安卓和IOS端的开发相互独立。从需求调研到上线测试，环节复杂，少则几个月多则一年。&lt;/p&gt;
&lt;p&gt;随着移动端的逐渐发展，项目规模逐渐变大，所以为了尽快占有市场推出应用，减少开发成本和周期，因而产生了跨平台框架。&lt;/p&gt;
&lt;p&gt;首先开始网页形式，入门简单，但不如原生流畅，性能不足且会受到浏览器限制。后来出现中间产品，既有原生组成也有WEB内容，好处在于原生开发人员和web开发人员需要密切配合。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Flutter" scheme="http://yoursite.com/categories/Flutter/"/>
    
    
      <category term="Flutter" scheme="http://yoursite.com/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>测试文档</title>
    <link href="http://yoursite.com/2019/09/25/My-first-blog-on-my-own-website/"/>
    <id>http://yoursite.com/2019/09/25/My-first-blog-on-my-own-website/</id>
    <published>2019-09-25T05:48:19.000Z</published>
    <updated>2020-03-06T04:24:27.729Z</updated>
    
    <content type="html"><![CDATA[<p>javascript是一门充满活力、简单易用的语言，又是一门具有许多复杂微妙技术的语言。即使是经验丰富的javascript开发者，如果没有认真学习的话，也无法真正理解它们，这就是javascript的矛盾之处。由于javascript不必理解就可以使用，因此通常来说很难真正理解语言本身，这就是我们面临的挑战。不满足于只是让代码正常工作，而是想要弄清楚为什么，勇于挑战这条崎岖颠簸的少有人走的路，拥抱整个javascript</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;javascript是一门充满活力、简单易用的语言，又是一门具有许多复杂微妙技术的语言。即使是经验丰富的javascript开发者，如果没有认真学习的话，也无法真正理解它们，这就是javascript的矛盾之处。由于javascript不必理解就可以使用，因此通常来说很难真正理解语言本身，这就是我们面临的挑战。不满足于只是让代码正常工作，而是想要弄清楚为什么，勇于挑战这条崎岖颠簸的少有人走的路，拥抱整个javascript&lt;/p&gt;
    
    </summary>
    
    
      <category term="测试用" scheme="http://yoursite.com/categories/%E6%B5%8B%E8%AF%95%E7%94%A8/"/>
    
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>广州校区管委会学生助理注意事项</title>
    <link href="http://yoursite.com/2019/09/25/%E5%B9%BF%E5%B7%9E%E6%A0%A1%E5%8C%BA%E7%AE%A1%E5%A7%94%E4%BC%9A%E5%AD%A6%E7%94%9F%E5%8A%A9%E7%90%86%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <id>http://yoursite.com/2019/09/25/广州校区管委会学生助理注意事项/</id>
    <published>2019-09-25T05:48:19.000Z</published>
    <updated>2020-03-06T04:19:04.719Z</updated>
    
    <content type="html"><![CDATA[<p>Point 1<br>【升旗摇杆借还登记】<br>①升旗摇杆允许借出，需要登记在a306摇杆借还登记薄上。<br>②参考登记簿上可借用名单并且核对身份信息决定是否借出（如果不在名单上需要打电话询问张老师）<br>③其他登记细节查看登记薄上注意事项</p><a id="more"></a><p>【国旗借还】<br>国旗允许借出（因为是外面都可以买到的），需要登记在a306管委会设备物资借用登记表（黄皮）上。</p><p>【校旗不允许借出】如果实在需要请打电话询问张老师。</p><p>Point 2<br>【收发室分信件】<br>大家在分信的时候注意一下<br>“电子与信息工程学院”，<br>“电子与通信工程学院”，<br>“微电子学院”，<br>“微电子科学与技术学院”，<br>“信息科学与技术学院”，<br>“信息管理系”<br>这几个单位<br>电子与信息工程学院和微电子学院现在是合并的一家，<br>电子与通信工程学院是深圳校区的，<br>微电子科学与技术学院是新成立的珠海校区的学院，<br>信息科学与技术学院现在没有了，分成了数据院和电信院，大部分老师在数据院，计算机系的老师在数据院。如果信件上写了这个单位的老师大家不知道的话可以百度。<br>信息管理系( information management)是资讯管理学院的</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Point 1&lt;br&gt;【升旗摇杆借还登记】&lt;br&gt;①升旗摇杆允许借出，需要登记在a306摇杆借还登记薄上。&lt;br&gt;②参考登记簿上可借用名单并且核对身份信息决定是否借出（如果不在名单上需要打电话询问张老师）&lt;br&gt;③其他登记细节查看登记薄上注意事项&lt;/p&gt;
    
    </summary>
    
    
      <category term="备忘录" scheme="http://yoursite.com/categories/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
